{"version":3,"sources":["modules/spotify/services/spotify.service.ts"],"names":["SpotifyService","_http","this","_serviceUrl","app_setting_1","AppSettings","SERVER_IP","prototype","create","spotify","strUrl","post","JSON","stringify","getRequestOptions","map","response","json","read","id","toString","get","update","put","delete","__decorate","core_1","Injectable","http2_service_1","Http2Service"],"mappings":"whCAiBaA,eAAc,WAIvB,QAAAA,gBAAoBC,OAAAC,KAAAD,MAAAA,MAFZC,KAAAC,YAAc,WAGlBD,KAAKC,YAAcC,cAAAC,YAAYC,UAAYJ,KAAKC,YAqDxD,MAlDWH,gBAAAO,UAAAC,OAAP,SAAcC,SACV,GAAIC,QAASR,KAAKC,WAIlB,OAAOD,MAAKD,MAAMU,KAAKD,OAAQE,KAAKC,UAAUJ,SAC1CL,cAAAC,YAAYS,qBACXC,IAAI,SAAAC,UAAY,MAAAA,UAASC,UAe3BjB,eAAAO,UAAAW,KAAP,SAAYC,IAER,GAAIT,QAASR,KAAKC,YAAcgB,GAAGC,UAEnC,OAAOlB,MAAKD,MAAMoB,IAAIX,OAClBN,cAAAC,YAAYS,qBACXC,IAAI,SAAAC,UAAY,MAAAA,UAASC,UAK3BjB,eAAAO,UAAAe,OAAP,SAAcH,GAAYV,SAEtB,GAAIC,QAASR,KAAKC,YAAcgB,GAAGC,UAEnC,OAAOlB,MAAKD,MAAMsB,IAAIb,OAAQE,KAAKC,UAAUJ,SACzCL,cAAAC,YAAYS,qBACXC,IAAI,SAAAC,UAAY,MAAAA,UAASC,UAI3BjB,eAAAO,UAAAiB,OAAP,SAAcL,IAEV,GAAIT,QAASR,KAAKC,YAAcgB,GAAGC,UACnC,OAAOlB,MAAKD,MAAMuB,OAAOd,SAIjCV,kBA1DaA,eAAcyB,YAD1BC,OAAAC,6CAK8BC,gBAAAC,gBAJlB7B","file":"spotify.service.js","sourcesContent":["\r\nimport {Response} from \"@angular/http\";\r\n\r\nimport {Http2Service} from \"./../../../services/http2.service\";\r\n\r\nimport {Injectable } from \"@angular/core\";\r\n\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\nimport {AppSettings} from './../../../app.setting';\r\n\r\nimport {Spotify} from './../models/spotify';\r\n\r\n\r\n@Injectable()\r\nexport class SpotifyService {\r\n\r\n    private _serviceUrl = 'Spotify/';\r\n\r\n    constructor(private _http: Http2Service) {\r\n        this._serviceUrl = AppSettings.SERVER_IP + this._serviceUrl;\r\n    }\r\n\r\n    public create(spotify: Spotify) {\r\n        let strUrl = this._serviceUrl;\r\n\r\n\r\n\r\n        return this._http.post(strUrl, JSON.stringify(spotify),\r\n            AppSettings.getRequestOptions())\r\n            .map(response => response.json());\r\n\r\n    }\r\n\r\n    //public read(criteria: string) {\r\n    //    // let strUrl: string = \"https://api.spotify.com/v1/search?type=artist&q=\" + criteria;\r\n\r\n    //    let strUrl = this._serviceUrl + 'search?type=artist&q=' + criteria;\r\n\r\n    //    return this._http.get(strUrl,\r\n    //        AppSettings.getRequestOptions())\r\n    //        .map(res => res.json())\r\n    //}\r\n\r\n\r\n    public read(id: number) {\r\n\r\n        let strUrl = this._serviceUrl + id.toString();\r\n\r\n        return this._http.get(strUrl,\r\n            AppSettings.getRequestOptions())\r\n            .map(response => response.json());\r\n\r\n    }\r\n\r\n\r\n    public update(id: number, spotify: Spotify) {\r\n\r\n        let strUrl = this._serviceUrl + id.toString();\r\n\r\n        return this._http.put(strUrl, JSON.stringify(spotify),\r\n            AppSettings.getRequestOptions())\r\n            .map(response => response.json())\r\n           \r\n    }\r\n\r\n    public delete(id: number) {\r\n\r\n        let strUrl = this._serviceUrl + id.toString();\r\n        return this._http.delete(strUrl)\r\n           \r\n    }\r\n\r\n}"]}