{"version":3,"sources":["components/login2.component.ts"],"names":["Login2Component","_loginService","fb","this","form","group","username","forms_1","Validators","required","password","compose","common_validator_1","CommonValidator","cannotContainSpace","prototype","login","_this","loginData","loginData_1","LoginData","controls","value","subscribe","res","error","setErrors","invalidLogin","__decorate","core_1","Component","selector","templateUrl","login_service_1","LoginService","FormBuilder"],"mappings":"iqCAUaA,gBAAe,WAIxB,QAAAA,iBAAoBC,cAA6BC,IAA7BC,KAAAF,cAAAA,cAChBE,KAAKC,KAAOF,GAAGG,OACXC,UAAW,GAAIC,QAAAC,WAAWC,UAC1BC,UAAW,GAAIH,QAAAC,WAAWG,SAASJ,QAAAC,WAAWC,SAC9CG,mBAAAC,gBAAgBC,wBAmB5B,MAfWd,iBAAAe,UAAAC,MAAP,WAAA,GAAAC,OAAAd,KACQe,UAAY,GAAIC,aAAAC,UAAUjB,KAAKC,KAAKiB,SAAmB,SAAEC,MAAOnB,KAAKC,KAAKiB,SAAmB,SAAEC,MAEnGnB,MAAKF,cAAce,MAAME,WAAWK,UAChC,SAACC,OAGD,SAACC,OACGR,MAAKb,KAAKsB,WAAYC,cAAc,OAOpD3B,mBA3BaA,gBAAe4B,YAJ3BC,OAAAC,WACGC,SAAU,SACVC,YAAa,0EAMsBC,gBAAAC,aAAkB3B,QAAA4B,eAJ5CnC","file":"login2.component.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CommonValidator } from './../validators/common.validator';\r\nimport { LoginService } from './../services/login.service';\r\nimport { LoginData } from './../models/loginData'\r\n\r\n@Component({\r\n    selector: 'login2',\r\n    templateUrl: 'html/components/login2.component.html'\r\n})\r\nexport class Login2Component {\r\n\r\n    public form: FormGroup;\r\n\r\n    constructor(private _loginService: LoginService, fb: FormBuilder) {\r\n        this.form = fb.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.compose([Validators.required,\r\n            CommonValidator.cannotContainSpace])]\r\n        })\r\n    }\r\n\r\n    public login(): void {\r\n        let loginData = new LoginData(this.form.controls['username'].value, this.form.controls['password'].value);\r\n\r\n        this._loginService.login(loginData).subscribe(\r\n            (res) => {\r\n                //console.log(res); // prints form values in json format\r\n            },\r\n            (error) => {\r\n                this.form.setErrors({ invalidLogin: true });\r\n            }\r\n\r\n        )\r\n    };\r\n\r\n\r\n}"]}