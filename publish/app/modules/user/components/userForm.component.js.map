{"version":3,"sources":["modules/user/components/userForm.component.ts"],"names":["UserFormComponent","fb","_this","this","countries","user","user_1","User","errorMessage","submitted","unshift","app_setting_1","AppSettings","DROPDOWN_TEXT","form","group","firstName","forms_1","Validators","compose","required","minLength","email","country","common_validator_1","CommonValidator","cannotselectedNotSelected","setValue","valueChanges","subscribe","x","prototype","onSubmit","value","console","log","alert","JSON","stringify","__decorate","core_1","Component","selector","templateUrl","FormBuilder"],"mappings":"moCAUaA,kBAAiB,WAQ1B,QAAAA,mBAAYC,IAAZ,GAAAC,OAAAC,IAPOA,MAAAC,WAAuB,gBAAiB,YAC3C,YAAa,aAEVD,KAAAE,KAAO,GAAIC,QAAAC,KAAK,GAAI,GAAI,IAGxBJ,KAAAK,aAAuB,GA6BvBL,KAAAM,WAAqB,EA1BxBN,KAAKC,UAAUM,QAAQC,cAAAC,YAAYC,eAEnCV,KAAKW,KAAOb,GAAGc,OACXC,WAAY,GAAIC,QAAAC,WAAWC,SAASF,QAAAC,WAAWE,SAAUH,QAAAC,WAAWG,UAAU,MAC9EC,OAAQ,GAAIL,QAAAC,WAAWE,UACvBG,SAAUZ,cAAAC,YAAYC,cAAeW,mBAAAC,gBAAgBC,6BAIzDvB,KAAKW,KAAKa,SAASxB,KAAKE,MAIxBF,KAAKW,KAAKc,aAAaC,UAAU,SAAAC,GAEzBA,EAAI,IACJ5B,MAAKM,aAAe,+BAiCpC,MArBWR,mBAAA+B,UAAAC,SAAP,WACI7B,KAAKE,KAAOF,KAAKW,KAAKmB,MAMtBC,QAAQC,IAAIhC,KAAKE,KAAKW,WACtBkB,QAAQC,IAAIhC,KAAKE,KAAKkB,SACtBW,QAAQC,IAAIhC,KAAKE,KAAKiB,OAEtBc,MAAMC,KAAKC,UAAUnC,KAAKW,KAAKmB,QAQ/B9B,KAAKM,WAAY,GAEzBT,qBA3DaA,kBAAiBuC,YAJ7BC,OAAAC,WACGC,SAAU,WACVC,YAAa,yFAUG1B,QAAA2B,eARP5C","file":"userForm.component.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { User } from './../models/user';\r\nimport {FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CommonValidator } from './../../../validators/common.validator';\r\nimport {AppSettings} from './../../../app.setting'\r\n\r\n@Component({\r\n    selector: 'userForm',\r\n    templateUrl: 'html/modules/user/components/userForm.component.html'\r\n})\r\nexport class UserFormComponent {\r\n    public countries: string[] = ['United States', 'Singapore',\r\n        'Hong Kong', 'Australia'];\r\n\r\n    public user = new User('', '', '');\r\n    public form: FormGroup;\r\n\r\n    public errorMessage: string = '';\r\n    constructor(fb: FormBuilder) {\r\n\r\n        this.countries.unshift(AppSettings.DROPDOWN_TEXT);\r\n\r\n        this.form = fb.group({\r\n            firstName: ['', Validators.compose([Validators.required, Validators.minLength(5)])],\r\n            email: ['', Validators.required],\r\n            country: [AppSettings.DROPDOWN_TEXT, CommonValidator.cannotselectedNotSelected]\r\n        })\r\n\r\n\r\n        this.form.setValue(this.user);\r\n\r\n        \r\n\r\n        this.form.valueChanges.subscribe(x => {\r\n\r\n            if (x > 4) {\r\n                this.errorMessage = \"Enter at least 4 Charater\";\r\n            }\r\n\r\n            if (x == \"\") {\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    public submitted: boolean = false;\r\n\r\n    public onSubmit(): void {\r\n        this.user = this.form.value;\r\n\r\n        //  let loginData = new LoginData(this.form.controls['username'].value, this.form.controls['password'].value);\r\n\r\n\r\n\r\n        console.log(this.user.firstName);\r\n        console.log(this.user.country);\r\n        console.log(this.user.email);\r\n\r\n        alert(JSON.stringify(this.form.value));\r\n\r\n        //if (!result) {\r\n        //    this.form.setErrors({\r\n        //        invalidLogin: true\r\n        //    });\r\n\r\n\r\n        this.submitted = true;\r\n    }\r\n}"]}